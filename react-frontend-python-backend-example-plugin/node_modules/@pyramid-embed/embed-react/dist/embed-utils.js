import { PyramidEmbedClient } from '@pyramid-embed/embed-js';
export async function initializeAPI(host, loginData) {
    const api = new PyramidEmbedClient(host);
    if (loginData.authFailureCallback) {
        api.setAuthFailureCallback(loginData.authFailureCallback);
    }
    if (!api.isLoggedIn) {
        await authenticate(api, loginData);
    }
    await api.init();
    return api;
}
async function authenticate(api, loginData) {
    const preparedLoginData = prepareLoginData(loginData);
    const { loginType } = preparedLoginData;
    if (loginType === 'forms') {
        const { userName, password, customData } = preparedLoginData;
        return api.login(userName, password, customData);
    }
    else if (loginType === 'windows') {
        return api.loginWindowsAuth();
    }
    else if (loginType === 'saml') {
        return api.loginSamlAuth(preparedLoginData.samlToken);
    }
    else if (loginType === 'openid') {
        return api.loginOpenIdAuth(preparedLoginData.openIdToken);
    }
    else if (preparedLoginData.authToken) {
        api.setAuthToken(preparedLoginData.authToken);
        return preparedLoginData.authToken;
    }
    return undefined;
}
function prepareLoginData(loginData) {
    if (!loginData.loginType && loginData.userName && loginData.password) {
        return Object.assign(Object.assign({}, loginData), { loginType: 'forms' });
    }
    return loginData.loginType ? loginData : Object.assign(Object.assign({}, loginData), { loginType: 'none' });
}
