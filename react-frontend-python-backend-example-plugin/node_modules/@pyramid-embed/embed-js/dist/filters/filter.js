export class Filter {
    constructor() {
        this.filters = [];
    }
    static create() {
        return new Filter();
    }
    static byUniqueName(uniqueName) {
        return new Filter().addUniqueName(uniqueName);
    }
    static by(dimension, hierarchy, member) {
        return new Filter().add(dimension, hierarchy, member);
    }
    addUniqueName(uniqueName) {
        this.filters.push(uniqueName);
        return this;
    }
    add(dimension, hierarchy, member) {
        this.filters.push(`[${dimension}].[${hierarchy}].&[${member}]`);
        return this;
    }
    toGlobalEmbedFilters() {
        return this.filters.map(x => {
            return { value: x };
        });
    }
}
