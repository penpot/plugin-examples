import { HubClient } from './hub-client';
import { EmbedContentOptions, EmbedHubOptions, PyramidEmbedClientApi, QuickEmbedOptions } from './types/types';
export declare class PyramidEmbedClient implements PyramidEmbedClientApi {
    private _host;
    private status;
    private embedQueue;
    constructor(host: string, userName?: string, password?: string, customData?: string);
    get host(): URL;
    get isClientLoaded(): boolean;
    get isLoggedIn(): boolean;
    static quickEmbed(options: QuickEmbedOptions): PyramidEmbedClient;
    init(userName?: string, password?: string, customData?: string): Promise<string>;
    setAuthToken(token: string): void;
    getAuthToken(): string;
    setAuthFailureCallback(callback: Function): Promise<void>;
    getCleanHostURL(): string;
    hub(container: HTMLElement, options?: EmbedHubOptions): Promise<HubClient>;
    waitForClientToLoad(): Promise<void>;
    embed(container: HTMLElement, options: EmbedContentOptions): Promise<void>;
    login(userName: string, password: string, customData?: string): Promise<string>;
    loginWindowsAuth(): Promise<string>;
    loginSamlAuth(samlToken: string, customData?: string): Promise<string>;
    loginOpenIdAuth(openIdToken: string, customData?: string): Promise<string>;
    private setStatus;
    private addEmbedRequestToQueue;
    private loginInternal;
    private hasCookie;
    private setTokenCookie;
    private getTokenCookie;
}
